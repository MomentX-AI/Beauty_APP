version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: beautyai-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: beautyai
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    networks:
      - beautyai-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: beautyai-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - beautyai-network

  # Go Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: beautyai-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_TYPE=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=beautyai
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_SSLMODE=disable
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=your-super-secret-jwt-key
      - LOG_LEVEL=info
      - LOG_FORMAT=json
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - /app/bin
    networks:
      - beautyai-network

  # MongoDB (Alternative to PostgreSQL)
  mongodb:
    image: mongo:7
    container_name: beautyai-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: beautyai
    volumes:
      - mongodb_data:/data/db
    networks:
      - beautyai-network
    profiles:
      - mongodb

  # Nginx (for production)
  nginx:
    image: nginx:alpine
    container_name: beautyai-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./frontend/build/web:/usr/share/nginx/html
    depends_on:
      - backend
    networks:
      - beautyai-network
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:
  mongodb_data:

networks:
  beautyai-network:
    driver: bridge 